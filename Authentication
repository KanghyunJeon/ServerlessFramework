1. serverless.yml

functions:
 #handler.js 파일에 hello 라는 람다가 생성됨. http url 생성
 hello:
 handler: handler.hello
 events:
 — http:
 path: users/create #endpoint에 users/create 라는 path설정
 method: get
 authorizer: # 해당 cognito풀을 이용하여 인증을 받으려는 설정
 name: authorizer
 arn: arn:aws:cognito-idp:ap-northeast-2:YOURNUMBERS:userpool/ap-northeast-2_YOURPROJECT





2. handler.js

module.exports.hello = async (event) => { //With cognito authorization
 return {
 statusCode: 200,
 body: JSON.stringify({
 message: ‘cognito!! successfully!’,
 input: event,
 }, null, 2),
 };
};






3. Android Header

open class HeaderMaker : Interceptor , KoinComponent{

    @Throws(IOException::class)
    override fun intercept(chain: Interceptor.Chain): Response {


        val mPreferenceUtil : PreferenceUtil by inject()
        val token = mPreferenceUtil.accessToken     //TODO get access token


        var request = chain.request()
        request = request.newBuilder()
            .addHeader("Content-Type", "application/json")
            .addHeader("Authorization", token) //new header added
            .build()

        return chain.proceed(request)
    }
}





4. Android Header setting for Retrofit2

Retrofit.Builder()
    .client(
        OkHttpClient.Builder()
            .connectTimeout(30, TimeUnit.SECONDS)
            .writeTimeout(40, TimeUnit.SECONDS)
            .readTimeout(40, TimeUnit.SECONDS)
            .addInterceptor(HeaderMaker())
            .build()
    )
    .addCallAdapterFactory(RxJava2CallAdapterFactory.create())
    .addCallAdapterFactory(LiveDataCallAdapterFactory())
    .addConverterFactory(GsonConverterFactory.create(GsonBuilder().setLenient().create()))
    .baseUrl(ApiInterfaceAmazon.BASE_URL)
    .build()





